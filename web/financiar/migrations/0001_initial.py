# Generated by Django 4.1.7 on 2023-06-01 14:48

from django.db import migrations, models
import django.db.models.deletion
import localflavor.generic.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('proiecte', '0004_auto_20211031_2218'),
    ]

    operations = [
        migrations.CreateModel(
            name='BankAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iban', localflavor.generic.models.IBANField(include_countries=None, max_length=34, use_nordea_extensions=False)),
                ('bank', models.CharField(choices=[('bt', 'Banca Transilvania')], max_length=5)),
                ('name', models.CharField(blank=True, max_length=255)),
                ('valid_from', models.DateField()),
                ('valid_through', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='BankStatement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('import_date', models.DateTimeField(auto_now_add=True)),
                ('month', models.DateField()),
                ('internal_ref', models.CharField(blank=True, max_length=255, null=True)),
                ('file', models.FileField(upload_to='financiar/statements/')),
                ('currency', models.CharField(choices=[('ron', 'RON'), ('eur', 'EUR'), ('usd', 'USD')], default='ron', max_length=255)),
                ('processing_status', models.PositiveSmallIntegerField(choices=[(1, 'Uploaded'), (2, 'Queued'), (3, 'Processing'), (4, 'Error in processing'), (5, 'Processed')], default=1)),
                ('last_processed_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='BankStatementItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_date', models.DateTimeField()),
                ('currency_date', models.DateTimeField()),
                ('description', models.CharField(max_length=1024)),
                ('reference', models.CharField(max_length=255)),
                ('value', models.FloatField(default=0.0)),
                ('balance', models.FloatField(default=0.0)),
            ],
        ),
        migrations.CreateModel(
            name='LegalEntity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tax_id', models.CharField(max_length=13, verbose_name='CIF sau CNP')),
                ('address', models.CharField(max_length=255)),
                ('account', localflavor.generic.models.IBANField(blank=True, include_countries=None, max_length=34, null=True, use_nordea_extensions=False)),
                ('contact_person_name', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_person_number', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_person_email', models.EmailField(blank=True, max_length=254, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('factura', 'Factura'), ('chitanta', 'Chitanta'), ('bon_fiscal', 'Bon Fiscal'), ('bilet', 'Bilet'), ('decont', 'Decont'), ('dispozitie_plata', 'Dispoziție de plată'), ('dispoziție_incasare', 'Dispoziție de încasare'), ('op', 'Ordin de plată'), ('other', 'Altele')], max_length=255)),
                ('registration_status', models.CharField(choices=[('request', 'Obligație de plată'), ('payment', 'Dovadă de plată')], default='payment', max_length=255)),
                ('value', models.FloatField()),
                ('currency', models.CharField(choices=[('ron', 'RON'), ('eur', 'EUR'), ('usd', 'USD')], default='ron', max_length=3)),
                ('document_number', models.CharField(max_length=255)),
                ('document_date', models.DateField()),
                ('internal_reference', models.CharField(blank=True, max_length=255, null=True)),
                ('registered_at', models.DateTimeField(auto_now_add=True)),
                ('third_party_text', models.CharField(blank=True, max_length=255, null=True)),
                ('direction', models.PositiveSmallIntegerField(choices=[(1, 'Noi emitem documentul'), (2, 'Noi primim documentul')], default=2)),
                ('notes', models.TextField()),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='proiecte.project')),
            ],
        ),
        migrations.CreateModel(
            name='PaymentDocumentFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uploaded_file', models.FileField(upload_to='financiar/document')),
                ('payment_document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='financiar.paymentdocument')),
            ],
        ),
    ]
